import React, { useState ,useEffect} from "react";
import {
  TextField,
  Box,
  Typography,
  FormControl,
  Button,
  Select,
  Grid,
  InputLabel,
  MenuItem,
  Grid2,
} from "@mui/material";
import axios from "axios";
import {useNavigate } from 'react-router-dom';
import Swal from 'sweetalert2';

const RequestBForm = () => {
  const [user, setUser] = useState();
  const navigate = useNavigate();
  const [isUserProfile, setIsUserProfile] = useState(false);
  
  const [studentInfo, setStudentInfo] = useState({
    FullName: "",
    StudentID: "",
    Major: "",
    Year: "",
    Email: "",
    PhoneNumber: "",
    PetitionName:"‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô‡∏™‡∏´‡∏Å‡∏¥‡∏à‡∏®‡∏∂‡∏Å‡∏©‡∏≤"

  });

  const [companyInfo, setCompanyInfo] = useState({
    CompanyNameTH: "",
    CompanyNameEN: "",
    CompanyAddress: "",
    CompanyProvince: "",
    CompanyPhoneNumber: "",
    relatedFiles: [],
    Allowance:"",
    Coop_StartDate:"",
    Coop_EndDate:"",
  });

  const [error, setError] = useState("");

  useEffect(() => {
    const fetchUserData = async () => {
      const studentId = localStorage.getItem("studentId");
      const token = localStorage.getItem("authToken");
  
      if (!studentId || !token) {
        console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö studentId ‡∏´‡∏£‡∏∑‡∏≠ token");
        return;
      }
  
      try {
        const response = await axios.get(`http://localhost:5000/user_info/${studentId}`, {
          headers: { Authorization: `Bearer ${token}` },
        });
  
        if (response.data) {
          setUser(response.data); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï user
          setIsUserProfile(true);
          console.log(response.data)
        } else {
          console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ");
        }
      } catch (err) {
        console.error("Error fetching user data:", err);
      }
    };
  
    fetchUserData();
  }, []);

  useEffect(() => {
    const setDefaultValue = () => {
      if (user) {
        setStudentInfo((prev) => ({
          ...prev,
          FullName: user.first_name && user.last_name ? `${user.first_name} ${user.last_name}` : prev.FullName,
          StudentID: user.student_id || prev.StudentID,
          Major: user.major || prev.Major,
          Year: user.year || prev.Year,
          Email: user.email || prev.Email,
          PhoneNumber: user.phone_number || prev.PhoneNumber,
        }));
        console.log(studentInfo)
      }
      else{
        console.log('user does not fetch')
      }
    };

    setDefaultValue();
  }, [user]);

  //Checked
  useEffect(() => {
    console.log("üìå Updated studentInfo:", studentInfo);
  }, [studentInfo]); // ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà studentInfo ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤

  const handleStudentChange = (e) => {
    const { name, value } = e.target;
    setStudentInfo((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  const handleCompanyChange = (e) => {
    const { name, value } = e.target;
    setCompanyInfo((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  const handleFileChange = (e) => {
    const files = Array.from(e.target.files); // ‡πÅ‡∏õ‡∏•‡∏á FileList ‡πÄ‡∏õ‡πá‡∏ô Array
    const validFiles = files.filter(
      (file) => file.type === "application/pdf" // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå PDF
    );

    if (validFiles.length + companyInfo.relatedFiles.length > 4) {
      setError("‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 4 ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô");
      return;
    }

    setError(""); // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    setCompanyInfo((prev) => ({
      ...prev,
      relatedFiles: [...prev.relatedFiles, ...validFiles],
    }));
  };

  const handleRemoveFile = (index) => {
    setCompanyInfo((prev) => ({
      ...prev,
      relatedFiles: prev.relatedFiles.filter((_, i) => i !== index),
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
  
    if (companyInfo.relatedFiles.length === 0) {
      setError("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå PDF ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡πÑ‡∏ü‡∏•‡πå");
      return;
    }
  
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á FormData ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const formData = new FormData();
  
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• studentInfo ‡∏•‡∏á‡πÉ‡∏ô formData
    Object.keys(studentInfo).forEach((key) => {
      formData.append(key, studentInfo[key]);
    });
  
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• companyInfo (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡πÑ‡∏ü‡∏•‡πå)
    Object.keys(companyInfo).forEach((key) => {
      if (key !== "relatedFiles") {
        formData.append(key, companyInfo[key]);
      }
    });
  
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå PDF ‡∏•‡∏á‡πÉ‡∏ô formData
    companyInfo.relatedFiles.forEach((file) => {
      formData.append("relatedFiles", file);
    });
  
    try {
      // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á Backend
      const response = await axios.post("http://localhost:5000/coopapplicationsubmit", formData, {
        headers: {
          "Content-Type": "multipart/form-data",
        },
      });
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ response ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (response.status === 200) {
        console.log("‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÅ‡∏£‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", response.data);

        // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á `current_petition`
        const info_response = await axios.post("http://localhost:5000/current_petition",formData,
        {
            headers: {
              "Content-Type": "application/json",
            },
          }
        );

        if (info_response.status === 200) {
          console.log("‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á current_petition ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", info_response.data);
          Swal.fire({
            position: "top",
            icon: "success",
            title: "‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
            text: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏Ñ‡∏£‡∏á‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠",
            timer: 2000
          });
          navigate("/project");
        } else {
          console.error("Failed to submit additional data:", info_response.data);
          alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°");
        }
      }
    } catch (error) {
      console.error("Error submitting form:", error);
      setError("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á");
    }
  };
  if (!user) return <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>;

  return (
    <Box sx={{ p: 4}}>
      <form onSubmit={handleSubmit}>
        <Grid container spacing={4}>
          {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏¥‡∏™‡∏¥‡∏ï */}
          <Grid item xs={12} sx={{pb:2, borderBottom :"1px solid #E3E3E3"}}>
            <Grid item xs={10}>
                <Typography variant="h6" gutterBottom sx={{fontFamily:"Noto Sans Thai, sans-serif;"}}>
                ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏¥‡∏™‡∏¥‡∏ï *
                </Typography>
                <TextField
                name="FullName"
                label="‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"
                fullWidth
                variant="outlined"
                value={(user.first_name +" "+ user.last_name)||studentInfo.FullName}
                onChange={handleStudentChange}
                disabled={isUserProfile}
                sx={{mt:2, mb: 3 }}
                required
                />
                <TextField
                name="StudentID"
                label="‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ô‡∏¥‡∏™‡∏¥‡∏ï"
                fullWidth
                variant="outlined"
                value={user.student_id||studentInfo.StudentID}
                onChange={handleStudentChange}
                disabled={isUserProfile}
                sx={{ mb: 3 }}
                required
                />
                <FormControl fullWidth>
                  <InputLabel>‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤</InputLabel>
                  <Select
                    name="Major"
                    value={user.major||studentInfo.Major}
                    onChange={handleStudentChange}
                    disabled={isUserProfile}
                    sx={{ mb: 3 }}
                    required
                  >
                  <MenuItem value="T12">T12 - ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏£‡∏™‡∏ô‡πÄ‡∏ó‡∏®‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</MenuItem>
                  <MenuItem value="T13">T13 - ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏•‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö</MenuItem>
                  <MenuItem value="T14">T14 - ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏≠‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏£‡∏≠‡∏ô‡∏¥‡∏Å‡∏™‡πå</MenuItem>
                  <MenuItem value="T17">T17 - ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏ö‡∏ö</MenuItem>
                  <MenuItem value="T20">T20 - ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏•</MenuItem>
                  <MenuItem value="T23">T23 - ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏•‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏£‡∏≠‡∏ô‡∏¥‡∏Å‡∏™‡πå‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞</MenuItem>
                  <MenuItem value="T18">T18 - ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï</MenuItem>
                  <MenuItem value="T19">T19 - ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</MenuItem>
                  <MenuItem value="T22">T22 - ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏¢‡∏≤‡∏ô‡∏¢‡∏ô‡∏ï‡πå</MenuItem>
                  </Select>
                </FormControl>
                <TextField
                name="Year"
                label="‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ"
                type="number"
                fullWidth
                variant="outlined"
                value={user.year||studentInfo.Year}
                onChange={handleStudentChange}
                disabled={isUserProfile}

                sx={{ mb: 3 }}
                required
                />
                <TextField
                name="Email"
                label="‡∏≠‡∏µ‡πÄ‡∏°‡∏•"
                type="email"
                fullWidth
                variant="outlined"
                value={user.email||studentInfo.Email}
                onChange={handleStudentChange}
                disabled={isUserProfile}

                sx={{ mb: 3 }}
                required
                />
                <TextField
                name="PhoneNumber"
                label="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå (‡∏ó‡∏µ‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠)"
                type="tel"
                fullWidth
                variant="outlined"
                value={user.phone_number||studentInfo.PhoneNumber}
                onChange={handleStudentChange}
                disabled={isUserProfile}

                sx={{ mb: 3 }}
                required
                />
            </Grid>

          </Grid>

          {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô */}
          <Grid item xs={12} sx={{pb:5, borderBottom :"1px solid #E3E3E3"}}>
            <Typography variant="h6" gutterBottom sx={{fontFamily:"Noto Sans Thai, sans-serif;"}}>
              ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô *
            </Typography>
            <TextField
              name="CompanyNameTH"
              label="‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)"
              fullWidth
              variant="outlined"
              value={companyInfo.CompanyNameTH}
              onChange={handleCompanyChange}
              sx={{mt:2, mb: 3 }}
              required
            />
            <TextField
              name="CompanyNameEN"
              label="‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó (‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)"
              fullWidth
              variant="outlined"
              value={companyInfo.CompanyNameEN}
              onChange={handleCompanyChange}
              sx={{ mb: 3 }}
              required
            />
            <TextField
              name="CompanyAddress"
              label="‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á"
              multiline
              rows={3}
              fullWidth
              variant="outlined"
              value={companyInfo.CompanyAddress}
              onChange={handleCompanyChange}
              sx={{ mb: 3 }}
              required
            />
            <TextField
              name="CompanyProvince"
              label="‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô"
              fullWidth
              variant="outlined"
              value={companyInfo.CompanyProvince}
              onChange={handleCompanyChange}
              sx={{ mb: 3 }}
              required
            />
            <TextField
              name="CompanyPhoneNumber"
              label="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó"
              type="tel"
              fullWidth
              variant="outlined"
              value={companyInfo.CompanyPhoneNumber}
              onChange={handleCompanyChange}
              sx={{ mb: 3 }}
              required
            />
            <TextField
              name="Allowance"
              label="‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö (‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô)"
              type="number"
              fullWidth
              variant="outlined"
              value={companyInfo.Allowance}
              onChange={handleCompanyChange}
              sx={{ mb: 3 }}
              required
            />
            <Grid container spacing={2} sx={{ mb: 3 }}>
              <Grid item xs={6}>
              <FormControl fullWidth sx={{ mb: 3 }}>       
                  <Typography variant="body1" sx={{ fontFamily:"Noto Sans Thai"}}>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô</Typography>
                  <TextField
                    name="Coop_StartDate"
                    type="date"
                    fullWidth
                    variant="outlined"
                    value={companyInfo.Coop_StartDate}
                    onChange={handleCompanyChange}
                    InputLabelProps={{ shrink: true }}
                    required
                  />
              </FormControl>
              </Grid>
              <Grid item xs={6}>
              <FormControl fullWidth sx={{ mb: 3 }}>
                  <Typography variant="body1" sx={{ fontFamily:"Noto Sans Thai"}}>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô</Typography>
                  <TextField
                    name="Coop_EndDate"
                    type="date"
                    fullWidth
                    variant="outlined"
                    value={companyInfo.Coop_EndDate}
                    onChange={handleCompanyChange}
                    InputLabelProps={{ shrink: true }}
                    required
                  />
              </FormControl>
              </Grid>
            </Grid>
            <FormControl fullWidth>
              <Button
                variant="contained"
                component="label"
                sx={{ mt: 2, mb: 1, backgroundColor: "#00A6A2", color: "#FFF",fontFamily:"Noto Sans Thai, sans-serif;",fontWeight:"400"}}
              >
                ‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 4 ‡πÑ‡∏ü‡∏•‡πå)
                <input
                  type="file"
                  hidden
                  accept=".pdf"
                  multiple
                  onChange={handleFileChange}
                />
              </Button>
              {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î */}
              {companyInfo.relatedFiles.length > 0 && (
                <Box>
                  {companyInfo.relatedFiles.map((file, index) => (
                    <Box key={index} sx={{ display: "flex", alignItems: "center", mt: 1 }}>
                      <Typography variant="body2">{file.name}</Typography>
                      <Button
                        size="small"
                        color="error"
                        onClick={() => handleRemoveFile(index)}
                        sx={{ ml: 2 }}
                      >
                        ‡∏•‡∏ö
                      </Button>
                    </Box>
                  ))}
                </Box>
              )}
              {/* ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î */}
              {error && (
                <Typography color="error" sx={{ mt: 1 }}>
                  {error}
                </Typography>
              )}
            </FormControl>
          </Grid>
        </Grid>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á */}
        <Grid container justifyContent="flex-end">
            <Box sx={{mt: 5 }}>
            <Button
                type="submit"
                variant="contained"
                color="primary"
                sx={{
                    mt: 2,
                    width: "181px",
                    backgroundColor: "#00A6A2",
                    color: "#FFFFFF", 
                    borderRadius: "16px",
                    fontSize: "16px",
                    fontFamily :"Noto Sans Thai , sans-seriff",
                    padding: "10px 20px",
                    textTransform: "none",
                    "&:hover": {
                    backgroundColor: "#006765",
                    },
                }}
            >
                ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á
            </Button>
            </Box>
        </Grid>

      </form>
    </Box>
  );
};

export default RequestBForm;
;
